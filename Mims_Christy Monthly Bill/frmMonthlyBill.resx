<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA3AEEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9+nzmmk8d/wA6c5+aq95OsEZZm2qO56D6/wCf8aFqGrZy3xe+
        OHhj4D+GG1rxZrVno2nIQivNL80r4J2IgyzuQDhVyx5wOK+TPGH/AAXK8C6JfyQ6Z4Z8WarDGxVZ2jgg
        Wcf3lVpA+P8AeVfwrzX9vv8AaU+CXij4wSXesyeIPiRqGkobW3sdPuFh0vT8Eb0EmQGYkZZkEhJwCcKq
        p4Hf/tI/s/684tdY+DetaRazH/j60vWFmukz/FscRg9OQG/CvVo4VWvNH7rwj4dUZYOOMzPB1qikr6Wi
        kvJNps+7vgr/AMFlvhT8VNbt9L1abUvBd9cNsibWUSO1kb/rsjuif9tCmenJIr62t7lbmEOjblIyCD1r
        8I/jl+zl4dufBV546+FviT/hMvCNmV/tK1lUxaloO/O0zxHDGM4YbsY+XOSMsPqP/gjF+3frFzDqXwl1
        q6bUrnT9Olv/AAs13K2Qkf3rJ3G47V3IyABiqeYOiooVfBxtz0y+MvDHL1ljzvh2cnCDtUpz+KP/AA3m
        fp6G4p69K8q/ZP8A2qdD/az+GS+INJjm0+8tbmXTdX0udh9o0e+hO2a2kx3U8hhwysrDgivVE+7615ji
        09T8MrUKlGbp1VZroOooopGQyQ818Gf8Fkv2wdQ+G+kaf8N/D949nfeILZrrVZ4m2yJaZKLEpHI8whwS
        OdqEfxV95ydfrX49f8FUNEufGH/BRlNDmkaN9cXStNt2wTtjmcxZH0Z3NdmBjF1Ly6H6f4RZbhMVxBGp
        jlzQpRlOz6uK0PKfhn8CraTwLH448ZtfWPhm4vF03R7GzCi98RXjHCwQbuETIO5zwArEDsf1H+F3/BMn
        4Q6D4P09brwbpt5eSW6NcSzbpt7lRuILfNjPTPOMe9fDn7XPjHT7b/go38J/h9Csdt4X+HN9o+l29quF
        QTzSQyyOfc5t156bP9o1+t1kNlnHtbKgDGK6MbUlFKx9T4pcVZvWhhcV7SUI1k5RjF2Sje0Vp1tqz57j
        /wCCZXwv0HxkuuaDpT6DetBJa3CWrkQ3lvIAJIZEPyujgDKsCOARhlVl/Lf9mv4b3XwB/wCCymheEbHz
        GbRPFV1Zwgt/y6PaTsAfXFvJnNfudcNiJmztwMk+1fj7YfETSPhJ8fvjD+1r4mWNtNnv7rTfh5Yuwjk8
        RXOxbWKeME7vKaOIHeM4jeRsYAysHObTieb4d8QYyrSxuErSdT2tPkinq3JuyN79hv47r8J/+C3vxO8G
        6dIx0Hx7ql/ZyQqcILy3VrlZMeq7btPfzeelfrXAfk/H1zX4M/8ABE3whrfx/wD+Cllr4wvGkupNBS/8
        Q6peFPla6ug8fJ6AyNNMwHojV+80DEqeMc8Z71ljopSSR5vi5l9HA5tSw0H78aUFP/ElZj6KKK4T8rGS
        jNfBn/BW39mHU28Y+DfjR4b0241XUPBN9ay6pZ28e+a6torhJVIUcsVKsMDs574r70cZYVDdWkd7A0U0
        aSRyDa6sMhhWlOfK7nrZJnNbLMUsTR3s013TVmj8Pv8Agrxpc3hH9rSLxhplxI2n+NtLs9c0jUbc/JIU
        jRNyHnJTbE/TADr1Jr6L8I/8FI/jF8QPhbb/ABE+F8eieNLeytoYfFvgu+jP23Q7pFxJPaOjB/s8wBZQ
        +8DGBtYPHX1l+31+wHoH7Z3wW/sFvL0rWNJJn0e+jQZtJDnK4/usMgj37HBH4v8AxI+AHxz/AOCfXxY+
        3Wtj4k0HVbAlYNX0iN5oLhCwO1sBg0bYXKSLtJxkMMV61KpTrL39+h/Q3D+NyfizJsPgcRKMcThk4xU9
        pR7fPutmfR/xk/4OG/idd6VdaTa/Dvwv4cvZEMM/9pyXF2ecgjysRbeh4bd9DyK+R9N8FfGr/gov8WoZ
        ILTWvFGpXGIIrmaI2+n6ZFnG2PaojijHGVjGTjOCSTXsHhn/AIKv/F3xheQ2Vz8Kfh9461f7qXEnha4+
        1yuejP5MqoTxknag6cjt9/8A/BOX4f8Ax++K3iqx8bfFVdH+HvhXT1L6d4N8PWP2BLuXBCz3TBmkdQrH
        bF5hjJCsVLAAVKSox0SOzFZrR4Sw06mDwdKlUt8XOptv+6t/yPVP+CYf/BPnT/2Cfgl/ZkkkeoeKdaYX
        Ws36qB50mMLGvoiLwo75JPJNfUEPCf4VHANxI7DqM9KkQbRXizqObuz+Z80zTEZjip4zFy5pzd2x1FFF
        SeeGKMUUUAG0Vn614esdehMd9Z2t5GwxsmiEin8DRRQVGTi7x0Zm6T8KvDWiXnnWeg6RbTg53x2qKwP1
        xXQRxhVHA46UUUblVK1So7zbfq7ihQOw9OlLRRQZhRRRQB//2Q==
</value>
  </data>
</root>